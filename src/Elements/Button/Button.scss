/***************************************************** 
PUNICA CSS > ELEMENTS : BUTTON ***********************/
@import "mixins";

// if button is enable
@if $elements-button {
	a.#{$button-class},
	.#{$button-class} {
		display: inline-flex;
		font-family: $button-font-family;
		font-size: $button-font-size;
		font-weight: $button-font-weight;
		text-decoration: none;
		white-space: nowrap;
		outline: none;
		width: min-content;
		text-shadow: $button-text-shadow;
		background: $button-bg-color;
		background-image: $button-bg-image;
		border: $button-border-width solid $button-border-color;
		appearance: none;
		color: $main-font-color;
		border-radius: $button-border-radius;
		box-sizing: border-box;
		cursor: pointer;
		line-height: $button-line-height;
		padding: $button-padding;
		transition: background .2s, color .2s;
		user-select: none;
		box-shadow: $button-shadow;
		align-items: center;
		justify-content: center;
		overflow: visible;
		text-align: center;
		&:focus,
		&:active,
		&:hover {
			color: $button-hover-text-color;
			background: $button-bg-hover;
			background-image: $button-bg-hover-image;
			border-color: darken($button-border-color, 20%);
			text-decoration: none;
			z-index: 1;
			transition: background .2s, color .2s;
		}
		&:focus {
			> i, 
			> [class^="material-icons"] {
				color: $primary-color;
			}
		}
		&.#{$button-class-active} {
			color: $main-invert-color;
			background: $button-bg-active;
			background-image: $button-bg-hover-image;
			border-color: darken($button-bg-active, 8%);
			text-decoration: none;
			i, [class^="material-icons"] {
				color: $main-invert-color;
				text-shadow: $button-icon-shadow;
			}
		}
		&[disabled],
		&:disabled,
		&.#{$button-class-disabled} {
			cursor: default;
			opacity: .59;
			pointer-events: none;
		}
		// button styles
		@if $elements-button-types {
			@each $theme-name, $theme-color in $button-styles {
				&.#{$theme-name} {
					@include button-types($theme-color);
				}
			} 
		}
		// Button Link
		@include link-button();

		// Button Sizes
		@if $elements-button-sizes {
			@include button-sizes();
		}
		// Button Block
		&.#{$button-class-block} {
			display: block;
			width: 100%;
		}
		i, [class^="material-icons"] {
			vertical-align: middle;
			font-size: 1.35em;
			color: $button-icon-color;
			text-shadow: $button-icon-shadow;
		}
		// secondary button
		@if $elements-button-secondary {
			&.#{$button-secondary} {
				@include secondary-button();
			}
		}
	}

	// if button groups is enable
	@if $elements-button-group {
		.#{$button-class-group} {
			display: inline-flex;
			flex-wrap: wrap;
			flex-shrink: 0;
			border-radius: $button-group-border-radius;
			@include shadow(0, .155em, 0, rgba(0, 0, 0, 0.095));
			.#{$button-class} {
				&:first-child:not(:last-child) {
					border-bottom-right-radius: 0;
					border-top-right-radius: 0;
				}
				&:not(:first-child):not(:last-child) {
					border-radius: 0;
					margin-left: -$button-border-width;
				}
				&:last-child:not(:first-child) {
					border-bottom-left-radius: 0;
					border-top-left-radius: 0;
					margin-left: -$button-border-width;
				}
			}
			// if secondary button is enable
			@if $elements-button-secondary {
				&.#{$button-secondary} > .#{$button-class} {
					@include secondary-button();
				}
			}
			&.#{$button-class-block} {
				display: flex;
				.#{$button-class} {
					flex: 1 0 0;
					flex-flow: column;
				}
			}
			.#{$button-class-inactive} {
				padding-left: $button-padding-inactive;
				padding-right: $button-padding-inactive;
				border-left: $button-border-width solid $button-border-color;
				pointer-events: none;
				cursor: default;
				background-image: none !important;
			}
			// Button Force
			@include button-force();

			// Button Sizes for groups
			@if $elements-button-sizes {
				@include button-sizes(true);
			}

			// Button Link
			@include link-button();

			//	dropdown for button groups
			// if dropdown is enable
			@if $elements-button-dropdown {
				.#{$dropdown-name}:last-child:not(:first-child),
				.#{$dropdown-name}:last-child:not(:first-child) > .#{$button-class} {
					border-bottom-left-radius: 0; 
					border-top-left-radius: 0;
					margin-left: -1px;
				}
				.#{$dropdown-name}:last-child,
				.#{$dropdown-name}:last-child > .#{$button-class}:first-child,
				.#{$dropdown-name}:last-child > .#{$button-class}:last-child {
					border-bottom-right-radius: $button-border-radius; 
					border-top-right-radius: $button-border-radius;
				}
				.#{$dropdown-name}:not(:first-child):not(:last-child) > .#{$button-class} {
					border-radius: 0;
					margin-left: -1px;
				}
			}

			@include breakpoints($breakpoints-medium, 'max-width') {
				//button-class-group
				box-shadow: none;
			}
		}
	}
	// if dropdown is enable
	@if $elements-button-dropdown {
		.#{$dropdown-name} {
			display: inline-block;
			position: relative;
			.#{$menu-name} {
				animation: slide-down .15s ease 1;
				display: none;
				left: 0;
				max-height: 45vh;
				overflow-y: auto;
				position: absolute;
				top: 100%;
			}
			&.#{$dropdown-right} {
				.#{$menu-name} {
					left: auto;
					right: 0;
				}
			}
			&.#{$dropdown-top} {
				.#{$menu-name} {
					bottom: 100%;
					top: auto;
					@include shadow(0 -3px 10px rgba(0, 0, 0, 0.15));
				}
			}
			&.#{$menu-item-active} .#{$menu-name},
			.#{$dropdown-toggle}:focus + .#{$menu-name},
			.#{$dropdown-toggle}:hover + .#{$menu-name},
			.#{$menu-name}:focus,
			.#{$menu-name}:hover {
				display: block;
			}
			// if button groups is enable 
			@if $elements-button-group {
				.#{$button-class-group} {
					.#{$dropdown-toggle}:nth-last-child(2) {
						border-bottom-right-radius: $button-border-radius;
						border-top-right-radius: $button-border-radius;
					}
				}
			}
			// Button Force
			@include button-force();
			// Button Sizes for dropdown
			@if $elements-button-sizes {
				@include button-sizes(true);
			}
		}
		@include breakpoints($breakpoints-medium, 'max-width') {
			//
		}
	}
}